{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>Welcome to my personal documentation repository! This repo is a collection of all the notes, guides, troubleshooting logs, and resources that I use in my daily. This includes everything from setting up full-stack applications to solving common errors.</p>"},{"location":"#folder-structure","title":"Folder Structure","text":"<p>Below is an overview of the folder structure and what each section contains:</p>"},{"location":"#development","title":"<code>/development</code>","text":"<p>This section contains detailed guides and documentation organized by various topics: - setup: Setup of various software, tools, stacks, etc.</p>"},{"location":"#error-solutions","title":"<code>/error-solutions</code>","text":"<p>A collection of error logs and their corresponding solutions: - development-errors: Errors faced during development</p>"},{"location":"#projects","title":"<code>/projects</code>","text":"<p>Documentation specific to different personal or work-related projects: - Project-specific setups, architectures, notes, etc.</p>"},{"location":"#learning","title":"<code>/learning</code>","text":"<p>A section dedicated to learning resources and materials: - docker - google-cloud-console</p>"},{"location":"#how-to-use","title":"How to Use","text":"<p>Feel free to browse through the directories to find the specific documentation, error and solution, or resources that you need. Each folder is organized to make it easy to locate the relevant information.</p>"},{"location":"#contribution","title":"Contribution","text":"<p>This repository is primarily for my personal use, but if you find something useful and would like to contribute or suggest improvements, feel free to create an issue or submit a pull request.</p>"},{"location":"development/miscellaneous/Add%20environment%20variable%20in%20React-Vite/","title":"Add environment variable in React Vite","text":""},{"location":"development/miscellaneous/Add%20environment%20variable%20in%20React-Vite/#react","title":"React","text":"<p>Write every environment variable with prefix REACT_APP_.... e.g.</p> <pre><code>REACT_APP_URL = http://localhost:8080/\n</code></pre> <p>In the jsx file use the variable using </p> <pre><code>process.env.REACT_APP_URL\n</code></pre>"},{"location":"development/miscellaneous/Add%20environment%20variable%20in%20React-Vite/#vite","title":"Vite","text":"<p>Write every environment variable using prefix VITE_...</p> <pre><code>VITE_URL = http://localhost:8080/\n</code></pre> <p>In the jsx file use the variable using</p> <pre><code>import.meta.env.VITE_URL\n</code></pre>"},{"location":"development/miscellaneous/Add%20environment%20variable%20in%20React-Vite/#reference","title":"Reference","text":"<ul> <li>youtube</li> </ul>"},{"location":"development/miscellaneous/Add%20environment%20variable%20in%20React-Vite/#tags","title":"Tags","text":""},{"location":"development/miscellaneous/Add%20environment%20variable%20in%20React-Vite/#react-vite-environment-variables","title":"react #vite #environment-variables","text":""},{"location":"development/setup/Chrome%20Extension%20Setup%20V3%20-%20Typescript/","title":"Chrome Extension Setup V3   Typescript","text":"<p>Coming Soon</p>"},{"location":"development/setup/Full%20Stack%20Mern%20Setup%20-%20JavaScript/","title":"Full Stack Mern Setup   JavaScript","text":"<p>Coming Soon</p>"},{"location":"development/setup/Full%20Stack%20Mern%20Setup%20-%20Typescript/","title":"Full Stack Mern Setup   Typescript","text":"<p>Coming Soon</p>"},{"location":"development/setup/Mkdocs%20Setup/","title":"Mkdocs Setup","text":""},{"location":"development/setup/Mkdocs%20Setup/#running-setup-locally","title":"Running Setup Locally","text":"<ol> <li>Create python environment and activate it <pre><code>python3 venv env-name\nsource env-name/bin/activate\n</code></pre></li> <li>install <code>mkdocs</code> and <code>mkdocs-material</code> and some extensions and plugins <pre><code>pip3 install mkdocs mkdocs-material mkdocs-minify-plugin\n</code></pre></li> <li>Run the website via following command <pre><code>mkdocs serve\n</code></pre></li> <li>change the config file to the following  <pre><code># # Project Information\nsite_name: XOXO Docs\nsite_url: https://docs.xoxoharsh.in/\nsite_author: Harsh Sharma\nsite_description: &gt;-\n  My Personal Documentation Website for all my projects and blogs.\n\n# Repository\nrepo_name: harshsharma20503/docs\nrepo_url: https://github.com/harshsharma20503/docs\n\n# Copyright\ncopyright: Copyright &amp;copy; 2024 Harsh Sharma\n\n# Theme\ntheme:\n  name: material\n  logo: https://e7.pngegg.com/pngimages/392/294/png-clipart-documents-logo-docs-logo-documents-documentation.png\n  favicon: https://e7.pngegg.com/pngimages/392/294/png-clipart-documents-logo-docs-logo-documents-documentation.png\n  features:\n    - announce.dismiss\n    # - content.action.edit\n    # - content.action.view\n    - content.code.annotate\n    - content.code.copy\n    # - content.code.select\n    # - content.footnote.tooltips\n    # - content.tabs.link\n    - content.tooltips\n    # - header.autohide\n    # - navigation.expand\n    - navigation.footer\n    - navigation.indexes\n    # - navigation.instant\n    # - navigation.instant.prefetch\n    # - navigation.instant.progress\n    # - navigation.prune\n    # - navigation.sections\n    # - navigation.tabs\n    # - navigation.tabs.sticky\n    - navigation.top\n    - navigation.tracking\n    - search.highlight\n    - search.share\n    - search.suggest\n    - toc.follow\n    # - toc.integrate\n  palette:\n    - media: \"(prefers-color-scheme)\"\n      toggle:\n        icon: material/brightness-auto\n        name: Switch to light mode\n    - media: \"(prefers-color-scheme: light)\"\n      scheme: default\n      primary: indigo\n      accent: indigo\n      toggle:\n        icon: material/brightness-7\n        name: Switch to dark mode\n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: slate\n      primary: black\n      accent: indigo\n      toggle:\n        icon: material/brightness-4\n        name: Switch to system preference\n  font:\n    text: Roboto\n    code: Roboto Mono\n  language: en\n# # Plugins\nplugins:\n  # - blog\n  - search:\n      separator: '[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&amp;[lg]t;|(?!\\b)(?=[A-Z][a-z])'\n  - minify:\n      minify_html: true\n\nextra:\n  social:\n    - icon: fontawesome/brands/github\n      link: https://github.com/harshsharma20503\n      name: GitHub\n    - icon: fontawesome/brands/linkedin\n      link: https://www.linkedin.com/in/harshsharma20503/\n      name: LinkedIn\n  generator: false\nmarkdown_extensions:\n  - abbr\n  - admonition\n  - attr_list\n  - def_list\n  - footnotes\n  - md_in_html\n  - toc:\n      permalink: true\n  - pymdownx.arithmatex:\n      generic: true\n  - pymdownx.betterem:\n      smart_enable: all\n  - pymdownx.caret\n  - pymdownx.details\n  - pymdownx.emoji:\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite\n  - pymdownx.keys\n  - pymdownx.magiclink:\n      normalize_issue_symbols: true\n      repo_url_shorthand: true\n      user: squidfunk\n      repo: mkdocs-material\n  - pymdownx.mark\n  - pymdownx.smartsymbols\n  - pymdownx.snippets:\n      auto_append:\n        - includes/mkdocs.md\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n  - pymdownx.tabbed:\n      alternate_style: true\n      combine_header_slug: true\n      slugify: !!python/object/apply:pymdownx.slugs.slugify\n        kwds:\n          case: lower\n  - pymdownx.tasklist:\n      custom_checkbox: true\n  - pymdownx.tilde\n</code></pre></li> <li>Open the docs folder as vault in Obsidian</li> <li>Write the docs using Obsidian</li> </ol>"},{"location":"development/setup/Mkdocs%20Setup/#deploying-the-setup","title":"Deploying the setup","text":""},{"location":"development/setup/Node%20Backend%20Setup%20-%20Typescript/","title":"Node Backend Setup   Typescript","text":"<p>1. Project Setup:</p> <ul> <li> <p>Create a new directory: <pre><code>mkdir my-ts-project\ncd my-ts-project\n</code></pre></p> </li> <li> <p>Initialize npm: <pre><code>npm init -y\n</code></pre></p> </li> <li> <p>Configure <code>package.json</code> file: <pre><code>\n</code></pre></p> </li> <li> <p>Install dependencies: <pre><code>npm install express dotenv mongoose cors jsonwebtoken bcryptjs cookie-parser\nnpm install @types/express typescript ts-node @types/node nodemon prettier -D\n</code></pre></p> </li> </ul> <p>2. Create TypeScript Configuration:</p> <ul> <li> <p>Initialise Typescript default config: <pre><code>npx tsc init\n</code></pre></p> </li> <li> <p>Configure <code>tsconfig.json</code> file: <pre><code>{\n  \"compilerOptions\": {\n    \"target\": \"es6\",\n    \"module\": \"commonjs\",\n    \"outDir\": \"./dist\",\n    \"rootDir\": \"./src\",\n    \"strict\": true,\n    \"esModuleInterop\": true\n  }\n}\n</code></pre></p> </li> </ul> <p>3. Create the File and Folder structure:</p> <ul> <li> <p>Create folders <pre><code>mkdir src public\ncd public\nmkdir temp %% for temproary storage%%\ncd ../src\nmkdir controllers models config utils middlewares routes\n</code></pre></p> </li> <li> <p>Create files <pre><code>touch .gitkeep %% inside the  %%\n</code></pre></p> </li> </ul> <p>4. Create the Server File:</p> <ul> <li>Create a <code>src/index.ts</code> file: <pre><code>import express from 'express';\n\nconst app = express();\nconst port = 3000;\n\napp.get('/', (req, res) =&gt; {\n  res.send('Hello from TypeScript Express server!');\n});\n\napp.listen(port, () =&gt; {\n  console.log(`Server listening on port ${port}`);\n});\n</code></pre></li> </ul> <p>4. Start the Server:</p> <ul> <li>Execute the server: <pre><code>ts-node src/index.ts\n</code></pre></li> </ul>"},{"location":"development/setup/Obsidian%20Setup/","title":"Obsidian Setup","text":""},{"location":"development/setup/Obsidian%20Setup/#1-download-and-install-obsidian","title":"1. Download and Install Obsidian","text":"<ul> <li>Go to the Obsidian website.</li> <li>Download the appropriate installer for your operating system (Windows, macOS, or Linux).</li> <li>Install the application by following the on-screen instructions.</li> </ul>"},{"location":"development/setup/Obsidian%20Setup/#2-changes-in-settings","title":"2. Changes in Settings","text":"<ul> <li>Add English to the <code>Spellcheck languages</code> in  <code>Editor</code> section in the <code>settings</code> and remove English (united kingdom).</li> <li>Set <code>default location for new notes</code> to <code>same folder as current file</code> in <code>Files and links</code> section.</li> <li>Set <code>default location for new attachments</code> to <code>in subfolder under current folder</code> in <code>Files and links</code> section. Write <code>attachments</code> as the subfolder name.</li> <li>Set the <code>themes</code> to <code>obsidianite</code> in <code>appearance</code> section.</li> <li>Set <code>default location of new canvas</code> to <code>same folder as current file</code> in <code>Canvas</code> Section.</li> <li>Set <code>New link format</code> to <code>Relative path to file</code> and disable <code>Wikilinks</code> in the <code>files and links</code> section to be able to use Mkdocs or other markdown to static site builder.</li> </ul>"},{"location":"development/setup/Obsidian%20Setup/#3-get-the-previous-vault","title":"3. Get the previous Vault","text":"<ul> <li>run the command <code>git clone https://github.com/HarshSharma20503/docs.git</code></li> <li>open the folder as vault in obsidian</li> </ul>"},{"location":"development/setup/React%20Frontend%20Setup%20-%20Javascript/","title":"Installing React using vite bundler","text":"<p>Create a folder in which you want to create your project. Write following command in it.</p> <pre><code>npm create vite@latest\n</code></pre> <p>Answer all the question related to it.</p> <pre><code> Project name: \u2026 CodeSphere-Frontend\n\u2714 Package name: \u2026 codesphere-frontend\n\u2714 Select a framework: \u203a React\n\u2714 Select a variant: \u203a JavaScript\n\nScaffolding project in /home/berserk/files/Shiv-Nadar-Hackathon/CodeSphere-Frontend...\n\nDone. Now run:\n\n  cd CodeSphere-Frontend\n  npm install\n  npm run dev\n</code></pre> <p>Run \\(npm \\space install\\) to install node modules.</p> <pre><code>npm install\n</code></pre> <p>Now to run the file write following command in terminal</p> <pre><code>npm run dev\n</code></pre>"},{"location":"development/setup/React%20Frontend%20Setup%20-%20Javascript/#removing-unnecessary-files","title":"Removing Unnecessary files","text":"<p>Remove the following files - public/vite.svg - assets folder</p> <p>Remove the icon from index.html and the extra meta tags.</p> <p>Clear the app.css, index.css and app.jsx file. Write rafce (used to create react arrow functional component) and start making changes.</p>"},{"location":"development/setup/React%20Frontend%20Setup%20-%20Javascript/#setting-up-folders-and-files","title":"Setting up folders and files","text":"<ul> <li>Create a \\(components\\) folder inside the src to store the components.</li> <li>Create a \\(pages\\) folder inside the src to store the pages files.</li> </ul> <p>Create .prettierrc and add the configurations</p> <pre><code>{\n    \"singleQuote\": false,\n    \"bracketSpacing\": true,\n    \"tabWidth\": 4,\n    \"trailingComma\": \"es5\",\n    \"semi\": true\n}\n</code></pre> <p>Create .prettierignore and add the configurations. You can also use prettierignore generator to generate it.</p> <p>```  .env .env .env. /.vscode /node_modules ./dist</p>"},{"location":"development/snippets/ai/Gemini%20Api/","title":"Gemini Api","text":"<pre><code>import { GoogleGenerativeAI } from \"@google/generative-ai\";\nimport dotenv from \"dotenv\";\n\ndotenv.config();\n\nconst GetGiminiResponse = async (prompt) =&gt; {\n    try {\n        const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);\n\n        const generationConfig = {\n            maxOutputTokens: 250,\n            temperature: 0, //this is used to control the randomness of the output, it ranges from 0 to 1, the higher the value the more random the output\n            topP: 1,\n            topK: 16, //this is used to control the diversity of the output, it ranges from 1 to infinity, the higher the value the more diverse the output\n        };\n\n        const model = genAI.getGenerativeModel({\n            model: \"gemini-pro\",\n            generationConfig,\n        });\n\n        const result = await model.generateContent(prompt);\n        const response = result.response;\n        const text = response.text();\n        return text;\n    } catch (e) {\n        console.log(e);\n        return \"Error Generating AI response. Please try again later.\";\n    }\n};\n\nconst Prompt = \"Write a program to print hello world in C++\";\nconst GeminiResponse = await GetGiminiResponse(Prompt);\nconsole.log(GeminiResponse);\n</code></pre>"},{"location":"development/snippets/npm-packages/Axios/","title":"Axios","text":""},{"location":"development/snippets/npm-packages/Axios/#installation","title":"Installation","text":"<pre><code>npm install axios\n</code></pre>"},{"location":"development/snippets/npm-packages/Axios/#basic-code","title":"Basic Code","text":"<pre><code>const getUser = async () =&gt; {\n  try {\n    const response = await axios.get('/user?ID=12345');\n    console.log(response);\n  } catch (error) {\n    console.error(error);\n  }\n}\n</code></pre>"},{"location":"development/snippets/npm-packages/Axios/#set-default-url","title":"Set default URL","text":"<ul> <li>In the starting file of react application write the following  <pre><code>if (import.meta.env.DEV) { //for vite application\n    console.log(\"Running in development mode\");\n    axios.defaults.baseURL = import.meta.env.VITE_LOCALHOST;\n} else {\n    console.log(\"Running in production mode\");\n    axios.defaults.baseURL = import.meta.env.VITE_SERVER_URL;\n}\n</code></pre></li> </ul> <p>Reference Link -&gt; Vitejs.dev</p> <p>You do not require to create .Dev environment variables in .env, it is default for vite application  For other react application you can use  following :</p> <pre><code>if (process.env.NODE_ENV === \"development\") {\n    console.log(\"Running in development mode\");\n    axios.defaults.baseURL = process.env.REACT_APP_LOCALHOST;\n} else {\n    console.log(\"Running in production mode\");\n    axios.defaults.baseURL = process.env.REACT_APP_SERVER_URL;\n}\n</code></pre>"},{"location":"development/snippets/npm-packages/Axios/#set-protected-call-function","title":"Set protected call function","text":""},{"location":"development/snippets/npm-packages/Axios/#method-1-when-backend-returns-a-message","title":"Method 1 - When backend returns a message","text":"<pre><code>import axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nasync function ApiCall(url, httpMethod, data) {\n    const token = Cookies.get(\"studentsToken\") || Cookies.get(\"professorsToken\");\n    try {\n        const config = {\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n        };\n        if (httpMethod === \"GET\") {\n            const response = await axios.get(url, config);\n            if (response.data.message === \"Invalid token\" || response.data.message === \"No Token Provided\") {\n                // remove Cookies if used\n                window.location.href = \"/\";\n            }\n            return response;\n        } else if (httpMethod === \"POST\") {\n            const response = await axios.post(url, data, config);\n            if (response.data.message === \"Invalid token\" || response.data.message === \"No Token Provided\") {\n                // remove Cookies if used\n                window.location.href = \"/\";\n            }\n            return response;\n        }\n    } catch (error) {\n        console.error(\"Error in API call:\", error);\n        throw error;\n    }\n}\n\nexport default ApiCall;\n</code></pre>"},{"location":"development/snippets/npm-packages/Axios/#method-2-when-backend-return-status-code","title":"Method 2 - When Backend return status code","text":"<pre><code>import { toast } from \"react-toastify\";\nimport axios from \"axios\";\n\nconst ApiCall = async (url, method, navigate, data) =&gt; {\n  console.log(\"******** Inside ApiCall function ********\");\n\n  if (method === \"GET\") {\n    try {\n      const response = await axios.get(url);\n      console.log(response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error in API call:\", error);\n      if (error.response.status === 401) {\n        toast.error(\"You are not authorized to access this page. Please login first.\");\n        navigate(\"/login\");\n      } else if (error.response.status === 404) {\n        toast.error(\"The requested resource was not found.\");\n        navigate(\"/\");\n      } else if (error.response.status === 500) {\n        toast.error(\"Server Error. Please try again later.\");\n        navigate(\"/\");\n      } else {\n        toast.error(\"An error occurred. Please try again later.\");\n        navigate(\"/\");\n      }\n    }\n  } else if (method === \"POST\") {\n    try {\n      const response = await axios.post(url, data);\n      console.log(response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error in API call:\", error);\n      if (error.response.status === 401) {\n        toast.error(\"You are not authorized to access this page. Please login first.\");\n        navigate(\"/login\");\n      } else if (error.response.status === 404) {\n        toast.error(\"The requested resource was not found.\");\n        navigate(\"/\");\n      } else if (error.response.status === 500) {\n        toast.error(\"Server Error. Please try again later.\");\n        navigate(\"/\");\n      } else {\n        toast.error(\"An error occurred. Please try again later.\");\n        navigate(\"/\");\n      }\n    }\n  }\n};\n\nexport default ApiCall;\n</code></pre> <p>Make axios call using protected function</p> <pre><code>import ApiCall from \"../../util/ApiCall\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Discover = () =&gt; {\n  const navigate = useNavigate();\n\n  useEffect(() =&gt; {\n    const getUser = async () =&gt; {\n      const response = await ApiCall(\"/user/getDetails\", \"GET\", navigate, null);\n      console.log(response.data);\n      setUser(response.data.name);\n    };\n    getUser();\n  }, []);\n\n  return &lt;&gt;&lt;/&gt;;\n};\n\nexport default Discover;\n</code></pre>"},{"location":"development/snippets/npm-packages/Axios/#send-post-request-with-token","title":"Send post request with token","text":"<pre><code>const config = {\n                headers: {\n                    Authorization: `Bearer ${\n                        JSON.parse(localStorage.getItem(\"userInfo\")).jwt\n                    }`,\n                },\n            };\n            const res = await axios.post(\n                \"/admin/sendTicketafterVerification/\",\n                {},\n                config\n            );\n            console.log(\"After Sending Ticket\", res);\n</code></pre>"},{"location":"development/snippets/npm-packages/Axios/#send-get-request-with-token","title":"Send get request with token","text":"<pre><code>const response = await axios.get(\n                `/admin/verify/${props.details._id}`,\n                config\n            );\n</code></pre>"},{"location":"development/snippets/npm-packages/Axios/#how-to-show-uploading-of-file-in-frontend","title":"How to show uploading of file in frontend","text":"<p>Yes, you can add a feature to show the upload percentage of the file using Axios's <code>onUploadProgress</code> event. This event allows you to track the progress of the upload and update the state accordingly. Here's how you can do it:</p>"},{"location":"development/snippets/npm-packages/Axios/#updated-frontend-code-with-upload-progress","title":"Updated Frontend Code with Upload Progress","text":"<p>FileUpload.js:</p> <pre><code>import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst FileUpload = () =&gt; {\n  const [file, setFile] = useState(null);\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const handleFileChange = (e) =&gt; {\n    setFile(e.target.files[0]);\n  };\n\n  const handleNameChange = (e) =&gt; {\n    setName(e.target.value);\n  };\n\n  const handleSubmit = async (e) =&gt; {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('name', name);\n\n    try {\n      const res = await axios.post('http://localhost:5000/upload', formData, {\n        onUploadProgress: (progressEvent) =&gt; {\n          const { loaded, total } = progressEvent;\n          const percent = Math.round((loaded * 100) / total);\n          setUploadPercentage(percent);\n        },\n      });\n\n      setMessage(res.data.message);\n      setUploadPercentage(0); // Reset progress bar on successful upload\n    } catch (err) {\n      console.error(err);\n      setMessage('Upload failed');\n      setUploadPercentage(0); // Reset progress bar on error\n    }\n  };\n\n  return (\n    &lt;div&gt;\n      &lt;form onSubmit={handleSubmit}&gt;\n        &lt;input type=\"text\" placeholder=\"Enter name\" value={name} onChange={handleNameChange} /&gt;\n        &lt;input type=\"file\" onChange={handleFileChange} /&gt;\n        &lt;button type=\"submit\"&gt;Upload&lt;/button&gt;\n      &lt;/form&gt;\n      {uploadPercentage &gt; 0 &amp;&amp; (\n        &lt;div&gt;\n          &lt;progress value={uploadPercentage} max=\"100\"&gt;{uploadPercentage}%&lt;/progress&gt;\n          &lt;span&gt;{uploadPercentage}%&lt;/span&gt;\n        &lt;/div&gt;\n      )}\n      &lt;p&gt;{message}&lt;/p&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default FileUpload;\n</code></pre>"},{"location":"development/snippets/npm-packages/Axios/#explanation","title":"Explanation:","text":"<ol> <li>State Management:</li> <li> <p><code>uploadPercentage</code>: State to keep track of the upload percentage.</p> </li> <li> <p>Event Handlers:</p> </li> <li><code>handleFileChange</code>: Updates the file state when a file is selected.</li> <li><code>handleNameChange</code>: Updates the name state when the input value changes.</li> <li> <p><code>handleSubmit</code>: Handles form submission, sets up the <code>FormData</code>, and makes the Axios request with <code>onUploadProgress</code>.</p> </li> <li> <p>Axios Request:</p> </li> <li>The <code>onUploadProgress</code> event is used to track the upload progress. It receives a <code>progressEvent</code> object, from which you can extract the <code>loaded</code> and <code>total</code> bytes.</li> <li> <p>Calculate the upload percentage and update the <code>uploadPercentage</code> state.</p> </li> <li> <p>Render:</p> </li> <li>Displays a progress bar and percentage text if <code>uploadPercentage</code> is greater than 0.</li> <li>Shows the response message or an error message after the upload attempt.</li> </ol>"},{"location":"development/snippets/npm-packages/Axios/#backend-code-unchanged","title":"Backend Code (unchanged):","text":"<p>server.js: <pre><code>const express = require('express');\nconst multer = require('multer');\nconst path = require('path');\n\nconst app = express();\nconst PORT = 5000;\n\n// Set up storage engine\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) =&gt; {\n    cb(null, 'uploads/');\n  },\n  filename: (req, file, cb) =&gt; {\n    cb(null, `${Date.now()}-${file.originalname}`);\n  },\n});\n\n// Initialize upload\nconst upload = multer({ storage });\n\n// Middleware to handle file upload and name\napp.post('/upload', upload.single('file'), (req, res) =&gt; {\n  try {\n    const { name } = req.body;\n    console.log(req.file); // File information\n    console.log(name); // Name information\n    res.status(200).json({ message: 'File and name uploaded successfully', file: req.file, name });\n  } catch (error) {\n    console.error(error);\n    res.status(500).json({ message: 'Upload failed', error });\n  }\n});\n\napp.listen(PORT, () =&gt; {\n  console.log(`Server is running on http://localhost:${PORT}`);\n});\n</code></pre></p>"},{"location":"development/snippets/npm-packages/Axios/#summary","title":"Summary","text":"<ul> <li>The frontend code now includes an upload progress bar that updates in real-time using Axios's <code>onUploadProgress</code> event.</li> <li>The progress bar and percentage are displayed during the file upload process, providing feedback to the user.</li> </ul> <p>With this implementation, users will see a progress bar indicating the percentage of the file that has been uploaded, enhancing the user experience.</p>"},{"location":"development/snippets/npm-packages/React-toastify/","title":"React toastify","text":""},{"location":"development/snippets/npm-packages/React-toastify/#installation","title":"Installation","text":"<p>Install the package</p> <pre><code>npm install react-toastify\n</code></pre>"},{"location":"development/snippets/npm-packages/React-toastify/#usage","title":"Usage","text":"<p>Inside your main file (App.jsx)</p> <pre><code>import { ToastContainer } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  return (\n    &lt;div className=\"App\"&gt;\n      &lt;ToastContainer position='top-center'/&gt;\n    &lt;/div&gt;\n);\n}\n</code></pre> <p>Now to show toast you can import toast and use it wherever you want</p> <pre><code>import { toast} from 'react-toastify';\n\nfunction Component() {\n  return (\n    &lt;div className=\"Section\"&gt;\n      toast.info(\"Loged in Successfully\");\n      toast.error('Enter College Email-ID (Should have @mail in it)');\n      toast.success(\"Logging successfull\");\n    &lt;/div&gt;\n);\n</code></pre>"},{"location":"development/snippets/npm-packages/React-toastify/#customisation","title":"Customisation","text":"<p>For Customisation you can add property to the ToastContainer or toast itself</p> <pre><code>&lt;ToastContainer\n    position=\"top-right\"\n    autoClose={2000}\n    hideProgressBar={false}\n    newestOnTop={false}\n    closeOnClick\n    rtl={false}\n    pauseOnFocusLoss\n    draggable\n    pauseOnHover\n    theme=\"light\"\n/&gt;\ntoast('\ud83e\udd84 Wow so easy!', {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: \"light\",\n});\n</code></pre>"},{"location":"development/snippets/npm-packages/React-toastify/#reference","title":"Reference","text":"<p>npm package docs</p>"},{"location":"development/snippets/npm-packages/Socket.io/","title":"Socket.io","text":"<ol> <li>Install the socket.io package inside the backend folder <code>npm i socket.io</code></li> <li>inside the index.js create the socket server <pre><code>import dotenv from \"dotenv\";\nimport connectDB from \"./config/connectDB.js\";\nimport { app } from \"./app.js\";\nimport { Server } from \"socket.io\";\n\ndotenv.config();\n\nconst port = process.env.PORT || 8000;\n\nconnectDB()\n  .then(() =&gt; {\n    console.log(\"Database connected\");\n    const server = app.listen(port, () =&gt; {\n      console.log(`Server listening on port ${port}`);\n    });\n\n    const io = new Server(server, {\n      pingTimeout: 60000,\n      cors: {\n        origin: \"*\",\n      },\n    });\n\n    io.on(\"connection\", (socket) =&gt; {\n      console.log(\"Connected to socket\");\n      socket.on(\"setup\", (userData) =&gt; {\n        console.log(\"Connected to socket in setup: \", userData.username);\n        socket.join(userData._id);\n        socket.emit(\"connected\");\n      });\n      socket.off(\"setup\", () =&gt; {\n        console.log(\"Disconnected from socket\");\n        socket.leave(userData._id);\n      });\n    });\n  })\n  .catch((err) =&gt; {\n    console.log(err);\n  });\n</code></pre></li> <li>socket.on means creating a listener that will listen to the event from the client</li> <li>connection is special listener <pre><code>io.on(\"connection\", (socket) =&gt; {\n  console.log(\"Connected to socket\");\n\n});\n</code></pre></li> <li>Corresponding the frontend will look like <pre><code>socket = io(\"url of the backend\");\n</code></pre></li> <li>After connection you can create different event listeners using the socket <pre><code>io.on(\"connection\", (socket) =&gt; {\n  console.log(\"Connected to socket\");\n\n  socket.on(\"join chat\", (room) =&gt; {\n    console.log(\"Joining chat: \", room);\n    socket.join(room);\n    console.log(\"Joined chat: \", room);\n  });\n\n});\n</code></pre></li> <li>Inside the frontend you can call for the event using emit <pre><code>socket.emit(\"join chat\", id);\n</code></pre></li> <li>similarly you can define event listeners in the frontend and than emit message or something to them from backend.</li> <li><code>io.to(id).emit(\"message recieved\", newMessage)</code> can be used to send message to a particular room;</li> <li>make sure to remove the event listeners using off  <pre><code>useEffect(() =&gt; {\n    socket = io(axios.defaults.baseURL);\n    if (user) {\n      socket.emit(\"setup\", user);\n    }\n    socket.on(\"connected\", () =&gt; setSocketConnected(true));\n    socket.on(\"typing\", () =&gt; setIsTyping(true));\n    socket.on(\"stop typing\", () =&gt; setIsTyping(false));\n    socket.on(\"message recieved\", (newMessageRecieved) =&gt; {\n      console.log(\"New Message Recieved: \", newMessageRecieved);\n      console.log(\"Selected Chat: \", selectedChat);\n      console.log(\"Selected Chat ID: \", selectedChat.id);\n      console.log(\"New Message Chat ID: \", newMessageRecieved.chatId._id);\n      if (selectedChat &amp;&amp; selectedChat.id === newMessageRecieved.chatId._id) {\n        setChatMessages((prevState) =&gt; [...prevState, newMessageRecieved]);\n      }\n    });\n    return () =&gt; {\n      socket.off(\"connected\");\n      socket.off(\"typing\");\n      socket.off(\"stop typing\");\n      socket.off(\"message recieved\");\n    };\n}, [selectedChat]);\n</code></pre></li> </ol>"},{"location":"development/snippets/npm-packages/react-router-dom/","title":"React router dom","text":""},{"location":"development/snippets/npm-packages/react-router-dom/#installation","title":"Installation","text":"<pre><code>npm install react-router-dom\n</code></pre> <p>Inside main.jsx or app.jsx wrap the browserRouter <pre><code>import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App.jsx\";\nimport \"./index.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.createRoot(document.getElementById(\"root\")).render(\n  &lt;React.StrictMode&gt;\n    &lt;Router&gt;\n        &lt;App /&gt;\n    &lt;/Router&gt;\n  &lt;/React.StrictMode&gt;\n);\n</code></pre></p> <p>Now Inside app.jsx declare url paths <pre><code>import { Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Chat from \"./pages/Chat\";\n\nconst App = () =&gt; {\n  return (\n    &lt;&gt;\n      &lt;Routes&gt;\n        &lt;Route path=\"/\" element={&lt;Home /&gt;} /&gt;\n        &lt;Route path=\"/chat\" element={&lt;Chat /&gt;} /&gt;\n      &lt;/Routes&gt;\n    &lt;/&gt;\n  );\n};\n\nexport default App;\n</code></pre></p>"},{"location":"dsa-cp/Concepts/Modulo%20Multiplicative%20Inverse/","title":"Modulo Multiplicative Inverse","text":""},{"location":"dsa-cp/Concepts/Modulo%20Multiplicative%20Inverse/#definition","title":"Definition","text":"<p>A modular multiplicative inverse of an integer a is an integer x such that a.x is congruent to 1 modular some modulus m. To write it in a formal way: we want to find an integer x so that</p> \\[ a.x \u2245 1 (mod\\space m) \\] <p>We also denote x simply with a<sup>-1</sup>.</p> <p>We should note that modular inverse does not always exist. It can be proven that the modular inverse exists if and only if a and m are relatively prime (i.e. gcd(a, m) = 1).</p>"},{"location":"dsa-cp/Concepts/Modulo%20Multiplicative%20Inverse/#finding-modular-inverse-using-extended-euclidean-algorithm","title":"Finding Modular Inverse using Extended Euclidean algorithm","text":"<p>$$ a.x + m.y = 1 $$ This is linear Diophantine equation in two variables. When gcd(a, m)  = 1, the equation has a solution and can be found using extended Euclidean algorithm. Note that gcd(a, m) = 1 is also the condition for the modular inverse to exist.</p> <p>Now, if we take modulo m of both sides, we can get rid of m.y and the equation become $$ a.x \u2245 1 (mod\\space m) $$ Thus, the modular inverse of a is x.</p>"},{"location":"dsa-cp/Concepts/Modulo%20Multiplicative%20Inverse/#implementation","title":"Implementation","text":""},{"location":"dsa-cp/Concepts/Modulo%20Multiplicative%20Inverse/#brute","title":"Brute","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint modInverse(int A, int M)\n{\n\u00a0\u00a0\u00a0\u00a0for(int X = 1; X &lt; M; X++)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (((A % M) * (X % M)) % M == 1)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return X;\n}\n\nint main()\n{\n\u00a0\u00a0\u00a0\u00a0int A = 3, M = 11;\n\u00a0\u00a0\u00a0\u00a0cout &lt;&lt; modInverse(A, M);\n\u00a0\u00a0\u00a0\u00a0return 0;\n\n}\n</code></pre> <p>\\(Time \\space Complexity - O(M)\\) \\(Space \\space Complexity - O(1)\\)</p>"},{"location":"dsa-cp/Concepts/Modulo%20Multiplicative%20Inverse/#a-and-m-are-co-prime-gcda-m-1","title":"A and M are co-prime (GCD(A, M) = 1)","text":"<pre><code>using namespace std;\nint gcdExtended(int a, int b, int &amp;x, int &amp;y) {\n    if (a == 0) {\n        x = 0;\n        y = 1;\n        return b;\n    }\n\n    int x1, y1;\n    int gcd = extendedGCD(b % a, a, x1, y1);\n\n    x = y1 - (b / a) * x1;\n    y = x1;\n\n    return gcd;\n}\nvoid modInverse(int A, int M)\n{\n    int x, y;\n    int g = gcdExtended(A, M, &amp;x, &amp;y);\n    if (g != 1)\n        cout &lt;&lt; \"Inverse doesn't exist\";\n    else {\n        int res = (x % M + M) % M;\n        cout &lt;&lt; \"Modular multiplicative inverse is \" &lt;&lt; res;\n    }\n}\nint main()\n{\n    int A = 3, M = 11;\n    modInverse(A, M);\n    return 0;\n}\n</code></pre> <p>\\(Time \\space Complexity - O(log \\space m)\\) \\(Space \\space Complexity - O(log \\space m)\\)</p>"},{"location":"dsa-cp/Concepts/Modulo%20Multiplicative%20Inverse/#modular-multiplicative-inverse-when-m-is-prime","title":"Modular multiplicative inverse when M is prime","text":"<pre><code>#include &lt;iostream&gt; \nusing namespace std; \nint power(int base, int exponent, int mod) \n{ \n    int result = 1; \n    while (exponent &gt; 0) \n    { \n        if (exponent % 2 == 1) \n            result = (result * base) % mod; \n        exponent &gt;&gt;= 1; \n        base = (base * base) % mod; \n    } \n    return result; \n} \nint modInverse(int a, int m) \n{ \n    a = (a % m + m) % m; \n    return power(a, m - 2, m); \n} \nint main() \n{ \n    int a, m; \n    cin &gt;&gt; a &gt;&gt; m; \n    int result = modInverse(a, m); \n    cout &lt;&lt; (result == 0 ? \"No modular inverse\" : to_string(result)) &lt;&lt; endl; \n    return 0; \n}\n</code></pre> <p>\\(Time \\space Complexity - O(log \\space m)\\) \\(Space \\space Complexity - O(log \\space m)\\)</p>"},{"location":"dsa-cp/Concepts/Modulo%20Multiplicative%20Inverse/#references","title":"References","text":"<p>https://cp-algorithms.com/algebra/module-inverse.html https://www.geeksforgeeks.org/multiplicative-inverse-under-modulo-m/</p>"},{"location":"dsa-cp/Concepts/Modulo%20Multiplicative%20Inverse/#tags","title":"Tags","text":""},{"location":"dsa-cp/Concepts/Modulo%20Multiplicative%20Inverse/#modulo-inverse-modulo-inverse-cp-concept-cp","title":"modulo-inverse #modulo #inverse #cp-concept #cp","text":""},{"location":"errors-solutions/cpp-errors/Memset%20Initialisation%20errorr/","title":"Memset Initialisation errorr","text":""},{"location":"errors-solutions/cpp-errors/Memset%20Initialisation%20errorr/#summary","title":"Summary","text":""},{"location":"errors-solutions/cpp-errors/Memset%20Initialisation%20errorr/#-memset-cant-be-used-to-initialise-int-array-with-1-an-array-of-int-can-only-be-initialised-with-0-or-1-using-memset","title":"- <code>memset</code>\u00a0can't be used to initialise\u00a0<code>int</code>\u00a0array with\u00a0<code>1</code>, an array of <code>int</code> can only be initialised with <code>0</code> or <code>-1</code> using memset","text":""},{"location":"errors-solutions/cpp-errors/Memset%20Initialisation%20errorr/#lessons-learned","title":"Lessons Learned","text":"<p>Therefore, <code>memset</code> cannot be used to initialise an <code>int</code> array with <code>1</code> because if an <code>int</code> is represented by 4 bytes, then <code>memset</code> will initialise each byte with <code>1</code>.</p> <p>The value <code>16843009</code> is equivalent to <code>0x01010101</code>. Each of the 4 bytes is initialised with <code>01</code>.</p> <p>Using <code>memset</code>, an array of <code>int</code> can only be initialised with <code>0</code> or <code>-1</code> because <code>0</code> and <code>-1</code> both have all bits <code>0</code> and <code>1</code> respectively in the two's complement binary representation, regardless of the size of the <code>int</code> data type.</p>"},{"location":"errors-solutions/cpp-errors/Memset%20Initialisation%20errorr/#reference-url","title":"Reference URL","text":""},{"location":"errors-solutions/cpp-errors/Memset%20Initialisation%20errorr/#-stack-overflow","title":"- Stack Overflow","text":""},{"location":"errors-solutions/cpp-errors/Memset%20Initialisation%20errorr/#tags","title":"Tags","text":""},{"location":"errors-solutions/cpp-errors/Memset%20Initialisation%20errorr/#cpp-memset-initialisation","title":"cpp #memset #initialisation","text":""},{"location":"errors-solutions/development-errors/Correct%20CORS%20Configuration%20for%20Handling%20Credentials%20Like%20Cookies/","title":"Correct CORS Configuration for Handling Credentials Like Cookies","text":"<p>When working with credentials such as cookies that are set by the backend, it\u2019s crucial to configure CORS (Cross-Origin Resource Sharing) correctly to ensure that the browser can send the cookies along with the request. Misconfiguring CORS can prevent the browser from sending cookies, leading to issues with authentication and session management.</p> <p>Avoid Using Wildcard (*) in CORS Configuration A common mistake is to set the origin option in the CORS configuration to \"*\", which allows any origin. When you also set credentials: true, this configuration will prevent the browser from sending cookies because the Access-Control-Allow-Origin header cannot be set to * if credentials are used.</p> <p>Example of incorrect configuration: <pre><code>app.use(\n  cors({\n    origin: \"*\",\n    credentials: true,\n  })\n);\n</code></pre></p> <p>Why is this wrong? \u2022 The browser will not send cookies or other credentials along with the request.</p> <p>\u2022 The Access-Control-Allow-Origin header cannot be set to \"*\" when credentials: true is used, resulting in a CORS error.</p> <p>Specify the Allowed Origin Explicitly To allow the browser to send cookies, you must specify the exact origin that is permitted to access the resource.</p> <p>Example of correct configuration: <pre><code>app.use(\n  cors({\n    origin: \"http://localhost:5173\",\n    credentials: true,\n  })\n);\n</code></pre></p> <p>Why is this correct? \u2022 By specifying the exact origin (http://localhost:5173), you ensure that the browser will send cookies along with the request.</p> <p>\u2022 This configuration adheres to CORS policy requirements, allowing the server to handle credentials properly.</p>"},{"location":"errors-solutions/development-errors/Node%20%2B%20Python%20deployment%20error/","title":"Node + Python deployment error","text":""},{"location":"errors-solutions/development-errors/Node%20%2B%20Python%20deployment%20error/#summary","title":"Summary","text":"<p>You cannot Run Python script with Node JS on render, but you can run node js with Python configuration.So use Python native environment to deploy the project which has both Python and node js</p>"},{"location":"errors-solutions/development-errors/Node%20%2B%20Python%20deployment%20error/#lessons-learned","title":"Lessons Learned","text":"<p>Node is available on all\u00a0Native Environments, so you\u2019d need to use a Python Native Environment if you wanted to run Python scripts, which would still allow you to configure Node.</p>"},{"location":"errors-solutions/development-errors/Node%20%2B%20Python%20deployment%20error/#reference-url","title":"Reference URL","text":""},{"location":"errors-solutions/development-errors/Node%20%2B%20Python%20deployment%20error/#-render","title":"- Render","text":""},{"location":"errors-solutions/development-errors/Node%20%2B%20Python%20deployment%20error/#tags","title":"Tags","text":""},{"location":"errors-solutions/development-errors/Node%20%2B%20Python%20deployment%20error/#error-node-python-error-render","title":"error #node-python-error #render","text":""},{"location":"general/ubuntu/Install%20a%20application%20and%20get%20it%20on%20launcher/","title":"Install a application and get it on launcher","text":"<ol> <li>First download the tar package and then extract in the <code>/usr/local/</code> folder.</li> <li>After that Export path variables if necessary.</li> <li>After that go to <code>/usr/share/applications</code> and create a <code>your-application.desktop</code> and add the content similar to the given below <pre><code>[Desktop Entry]\nVersion=1.0\nType=Application\nTerminal=true\nName=Android Studio\nComment=Launches Android Studio\nIcon=/usr/local/android-studio/bin/studio.png\nExec=/usr/local/android-studio/bin/studio.sh\nX-Desktop-File-Install-Version=0.26\n</code></pre></li> </ol> <p>after this check if it is running 4. <code>desktop-file-validate android-studio.desktop</code> 5. install the file by <code>sudo desktop-file-install android-studio.desktop</code> This is an example of getting application to the launcher.</p>"},{"location":"general/ubuntu/Install%20a%20application%20and%20get%20it%20on%20launcher/#launcher-application-launcher-android-studio-usrlocal-usrshareapplications-android-studio-desktop","title":"launcher #application-launcher #android-studio #/usr/local/ #/usr/share/applications #android-studio-desktop","text":"<p>Reference: https://bterczynski.medium.com/adding-android-studio-to-your-applications-launcher-and-favorites-bar-in-ubuntu-eff05e6abfd</p>"},{"location":"general/ubuntu/Remove%20Icons%20from%20Ubuntu/","title":"Remove Icons from Ubuntu","text":"<p>Search for extensions in the search bar. You will get option there. From there you can remove icons display or turn it on.</p>"},{"location":"general/ubuntu/Remove%20Icons%20from%20Ubuntu/#install-gnome-extension","title":"Install gnome Extension","text":""},{"location":"general/ubuntu/Remove%20Icons%20from%20Ubuntu/#installing-gnome-shell-extensions","title":"Installing GNOME Shell Extensions","text":"<p>Now that you know what GNOME Shell Extensions are, let\u2019s see how to install them.</p> <p>There are three ways you can use GNOME Extensions:</p> <ol> <li>Use a minimal set of extensions from Ubuntu (or your Linux distribution)</li> <li>Find and install extensions in your web browser</li> <li>Install extensions using Extension Manager App</li> <li>Download and manually install extensions</li> </ol> <p>Although GNOME Tweaks is not required for extensions to work,\u00a0installing GNOME Tweak Tool in Ubuntu\u00a0or whichever distribution you are using is better.</p> <pre><code>sudo apt install gnome-tweaks\n</code></pre> <p>At times, you would also need to know the version of GNOME Shell you are using. This helps determine whether an extension is compatible with your system. You can use the command below to find it:</p> <pre><code>gnome-shell --version\n</code></pre>"},{"location":"general/ubuntu/Remove%20Icons%20from%20Ubuntu/#method-1-use-the-gnome-shell-extensions-package","title":"Method 1: Use the gnome-shell-extensions package","text":"<p>Ubuntu (and several other Linux distributions such as Fedora) provide a package with a minimal set of GNOME extensions. You don\u2019t have to worry about compatibility here as it is tested by your Linux distribution.</p> <p>If you want a no-brainer, just get this package and you\u2019ll have 8-10 GNOME extensions installed.</p> <pre><code>sudo apt install gnome-shell-extensions\n</code></pre> <p>Once installed, log out and re-login to your system. After that, start GNOME Extensions App from Overview. This extensions app will be installed as part of\u00a0<code>gnome-shell-extensions</code>\u00a0package.</p> <p>You\u2019ll find a few extensions installed. You can just toggle the button to start using an installed extension.</p>"},{"location":"general/ubuntu/Transfer%20File%20from%20laptop%20to%20PC/","title":"Transfer File from laptop to PC","text":"<p>1. Install a WiFi FTP Server on Android 1. Download an FTP Server App: Install an app like \u201cWiFi FTP Server\u201d or any similar app from the Google Play Store. 2. Configure the FTP Server:     \u2022 Open the app and configure the FTP server settings (port number, username, password, etc.).     \u2022 Start the FTP server. 2. Connect Your Linux Laptop to the Android Hotspot 1. Enable Mobile Hotspot on Android:     \u2022 Go to Settings &gt; Network &amp; internet &gt; Hotspot &amp; tethering &gt; Wi-Fi hotspot and enable it.     \u2022 Make a note of the hotspot\u2019s SSID (name) and password. 2. Connect Your Linux Laptop to the Android Hotspot:     \u2022 On your Linux laptop, open the Wi-Fi settings and connect to the Android hotspot using the provided SSID and password. 3. Access the FTP Server from Linux 1. Open Your File Manager:     \u2022 On your Linux laptop, open your file manager (e.g., Nautilus, Dolphin, Thunar). 2. Connect to the FTP Server:     \u2022 In the file manager, find the option to connect to a server (often under the \u201cOther Locations\u201d or \u201cNetwork\u201d tab).     \u2022 Enter the FTP URL you configured in the Android app, typically in the format: <code>ftp://192.168.x.x:port</code> for example <code>ftp://192.168.115.185:2221</code>     \u2022 If prompted, enter the username and password you set up in the FTP server app. Alternatively, choose \u201cAnonymous\u201d if you set the FTP server to allow anonymous connections. 4. Access Files:     \u2022 Once connected, you\u2019ll see the Android device\u2019s storage as a folder in your file manager. You can now transfer files between your Linux laptop and Android device.</p>"},{"location":"learning/docker/Docker%20-%20Hitesh%20Chaudhary%20%28Youtube%29/","title":"Docker   Hitesh Chaudhary (Youtube)","text":"<p>Learning Soon</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/","title":"Git GitHub   Hitesh Chaudhary (Youtube)","text":"<p>Reference Link : Youtube Link</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#check-version","title":"Check Version","text":"<p><code>git --version</code> or <code>git -v</code></p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#initialising-git-repo","title":"Initialising git repo","text":"<p><code>git init</code> \u2192 Creates a hidden .git folder which keeps track of all the track-able files</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#check-status","title":"Check Status","text":"<p><code>git status</code> \u2192 Tell the status of the working directory, staging area, files tracked, untracked, etc.</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#pulling-from-the-remote-repo-using-rebase","title":"Pulling from the Remote Repo using rebase","text":"<pre><code>git pull --rebase\n# if the merge conflict arise than\ngit rebase --abort\n# than do it the normal way \ngit pull\n# and resolve merge conflict through traditional ways.\n</code></pre>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#stage-a-file","title":"Stage a file","text":"<p><code>git add &lt;file-name&gt;</code></p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#unstage-a-file","title":"Unstage a file","text":"<p><code>git rm --cached &lt;file-name&gt;</code> \u2192 do not use it without \u2014cached as it would delete the file itself.</p> <p><code>git restore --staged &lt;file-name&gt;</code> \u2192 unstages the file, without the \u2014stage it would completely discard the changes.</p> <p><code>git restore --dry-run &lt;file&gt;</code> \u2192 f you want to see what changes would be made without actually applying them</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#make-a-commit","title":"Make a commit","text":"<p><code>git commit -m \u201ccommit-message\u201d</code></p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#view-all-commits","title":"View all commits","text":"<p><code>git log</code> \u2192 shows you commit logs (author, time, message, hash)</p> <p><code>git log --oneline</code> \u2192 shows you commit in one line (hash, message)</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#best-practices-for-git-commit-messages","title":"Best Practices for Git Commit Messages","text":"<p>They should focus on one feature and be in the present tense.</p> <p>for e.g. \u201cAdd user authentication feature\u201d, \u201cUpdate README with installation instructions\u201d</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#changes-in-git-configuration-git-config","title":"Changes in git configuration (git config)","text":"<p><code>git config --global user.name \"Your Name\"</code> \u2192 This specifies your username for Git Globally. <code>git config --global user.email \"your.email@example.com\"</code> \u2192This specifies your email address associated with Git commits globally.</p> <p><code>git config --global core.editor \"code --wait\"</code> \u2192 This sets your preferred text editor for Git i.e. vs-code and \u2014wait tells git to wait till the vs-code closes before resuming.</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#how-to-ignore-a-file","title":"How to ignore a file","text":"<p>Create a file name .gitignore and inside it write the file name of the file you do not want git to track. The files inside the .gitignore won\u2019t be track able.</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#how-to-create-a-branch","title":"How to create a branch","text":"<p><code>git branch \"branch-name\"</code> \u2192 creates a new branch but remains on the same branch as before</p> <p><code>git switch -c \"branch-name\"</code> \u2192 creates a new branch and switches to that newly created branch</p> <p><code>git checkout -b \"branch-name\"</code> \u2192 creates a new branch and switches to that newly created branch</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#how-to-switch-to-a-branch","title":"How to switch to a branch","text":"<p><code>git checkout \u201cbranch-name\u201d</code> \u2192 switches to the mentioned branch</p> <p><code>git switch \"branch-name\"</code> \u2192switches to the mentioned branch</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#discarding-changes-in-the-working-directory-for-a-specific-file","title":"Discarding changes in the working directory for a specific file","text":"<p><code>git checkout -- \"file-name\"</code> \u2192 removes all the changes done in a file</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#merging-the-branches","title":"Merging the branches","text":"<p>switch to the main/master branch (the primary branch in which you want the secondary branch to merge into)</p> <p><code>git merge \"branch-name\"</code> \u2192 merges the branch to the current branch</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#delete-a-branch","title":"Delete a branch","text":"<p><code>git branch -d \"branch-name\"</code></p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#understand-merge-conflicts","title":"Understand merge conflicts","text":"<p>Everything above the <code>===========</code> and below <code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code> is from the current branch of local repo, and everything below is the other branch code. You can go and keep the file as you want and than make another commit.</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#how-to-compare-a-file-between-different-commits","title":"How to compare a file between different commits","text":"<p>we use <code>git diff</code> to compare a file between 2 point of time (commit, staging, etc)</p> <p>How to read diff:</p> <p>a\u2192file1 &amp; b\u2192file2 (same file over time)</p> <p><code>-----</code> file1 (indicates code of file1)</p> <p><code>+++++</code> file2 (indicates code of file2)</p> <p>changes in lines &amp; little preview of it</p> <p>minus and plus does not mean insertion and deletion</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#difference-between-files-in-staging-area-and-last-commit","title":"Difference between files in staging area and last commit","text":"<p><code>git diff --staged</code> : shows the differences between the files in the staging area (index) and the last commit.</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#difference-between-snapshots-of-two-commits","title":"Difference between snapshots of two commits","text":"<p><code>git diff &lt;commit-hash 1&gt; &lt;commit-hash 2&gt;</code> : shows the differences between the snapshots of two specified commits.</p> <p>or</p> <p><code>git diff &lt;commit-hash 1&gt;..&lt;commit-hash 2&gt;</code> : shows the differences between the snapshots of two specified commits.</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#difference-between-snapshots-of-two-branch","title":"Difference between snapshots of two branch","text":"<p><code>git diff &lt;branch-name 1&gt; &lt;branch-name 2&gt;</code> or <code>git diff &lt;branch-name 1&gt;..&lt;branch-name 2&gt;</code> : shows the difference between the snapshots of two branches.</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#understanding-git-stash","title":"Understanding git stash","text":"<p>When you are working on a branch and you work is not completed so you cannot commit yet but you need to switch branch to do some changes in other branch. Git does not allow you to change branch without committing the changes. This is resolved by the <code>git stash</code>.</p> <p><code>git stash</code> : temporarily saves changes in the working directory that are not yet committed, allowing you to work on a clean slate without committing those changes.</p> <p><code>git stash pop</code> : applies the most recently stashed changes back to the working directory and removes that stash from the stash list.</p> <p>Note: I can even pop the stash in other branches too.</p> <p><code>git stash list</code> : displays a list of all stashed change-sets.</p> <p><code>git stash apply</code> : applies the most recently stashed changes back to the working directory without removing that stash from the stash list</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#advance-commands","title":"Advance Commands","text":"<p><code>git checkout &lt;commit-hash&gt;</code> : switches the working directory to the state of the specified commit, putting the repository in a \"detached HEAD\" state where you can view and work with the files from that commit without being on any branch</p> <p><code>git switch main</code> : \u201cre-attach Head\u201d</p> <p><code>git checkout HEAD~2</code> : checks out the commit that is two commits before the current HEAD, putting the repository in a \"detached HEAD\" state.</p> <p><code>git restore &lt;file-name&gt;</code> : reverts the file to its last committed state, discarding any local changes.</p> <p><code>git restore .</code> : reverts all files in the working directory to their last committed state, discarding any local changes</p> <p><code>git restore --staged --worktree .</code> reverts all files in both the staging area and the working directory to their last committed state, discarding all local changes.</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#understanding-git-rebase","title":"Understanding git rebase","text":"<p>Note: Be cautious when running this command as it rewrites the git history.</p> <p>Run this command from side branch, never run this command on main or master branch.</p> <p>run <code>git rebase master</code> on other branch like bugfix. It takes bugfix commits and put it ahead of master branch.</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#github","title":"GitHub","text":""},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#generating-ssh-key-and-adding-it-to-the-ssh-agent","title":"Generating ssh key and adding it to the ssh-agent","text":"<p>https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent</p> <p>Go to settings\u2192SSH GPG keys \u2192 new SSH key \u2192 authentication key</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#create-new-repo-and-upload-the-project","title":"Create new repo and upload the project","text":"<p><code>git branch -M main</code> : renames the current branch to \"main\u201d</p> <p><code>git remote add origin &lt;repo url&gt;</code></p> <p><code>git push -u origin main</code></p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#cloning-repo","title":"Cloning repo","text":"<p><code>git clone &lt;repo-url&gt;</code> : creates a local copy of a Git repository from the provided <code>&lt;repo-url</code> (usually from a Git hosting platform).</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#remote-commands","title":"Remote commands","text":"<p><code>git remote -v</code> : It displays information about all configured remotes, including their URLs and the configured fetch refspec.</p> <p><code>git remote add &lt;name&gt; &lt;url&gt;</code> : creates a shortcut named  for a remote Git repository at  <p><code>git remote rename &lt;old-name&gt; &lt;new-name&gt;</code> : updates the local reference for a remote repository, changing its name from  to pen_spark <p><code>git remote remove &lt;name&gt;</code> : removes the configured remote repository named <code>&lt;name&gt;</code> from your local Git repository.</p>"},{"location":"learning/git-github/Git-GitHub%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#push-commands","title":"Push Commands","text":"<p><code>git push &lt;remote&gt; &lt;branch&gt;</code> : uploads local commits from your branch named <code>&lt;branch&gt;</code> to the corresponding branch named <code>&lt;branch&gt;</code> on the remote repository named <code>&lt;remote&gt;</code>.</p> <p><code>git push &lt;remote&gt; &lt;local-branch&gt;:&lt;remote-branch&gt;</code> : pushes commits from your local branch <code>&lt;local-branch&gt;</code> to a specific branch named <code>&lt;remote-branch&gt;</code> on the remote repository named <code>&lt;remote&gt;</code>.</p> <p><code>git push -u origin main</code> : uploads your local \"main\" branch to \"origin\" and makes it the default for future pushes. After this you can directly use <code>git push</code> command.</p> <p><code>git pull</code> = <code>git fetch</code> + <code>git merge</code></p>"},{"location":"learning/google-cloud-console/Virtual%20Machine%20-%20Compute%20Engine/","title":"Virtual Machine   Compute Engine","text":"<p>Learning Soon</p>"},{"location":"learning/mongodb/Aggregation%20Pipeline%20-%20Hitesh%20Chaudhary%20%28Youtube%29/","title":"Aggregation Pipeline   Hitesh Chaudhary (Youtube)","text":"<p>Reference Link : Youtube Link</p> <p>Here we are doing question based learning so only questions and answers are provided.</p> <p>Q1. How many active users are there? <pre><code>[\n    {\n        $match : { isActive : true }        \n    },\n    {\n        $count : \"activeUsersCount\"\n    }\n]\n</code></pre></p> <ul> <li>Explanation:<ul> <li>$match: Filters users with <code>isActive: true</code>.</li> <li>$count: Counts the resulting users and outputs the count as <code>activeUsersCount</code>.</li> </ul> </li> <li>Note: Each stage processes the output of the previous stage.</li> </ul> <p>Q2. What is the average age of all users?</p> <pre><code>[\n    {\n        $group : {\n            _id : null,\n            averageAge : { $avg : \"$age\" }\n        }      \n    }\n]\n</code></pre> <ul> <li>Explanation:<ul> <li>$group: Groups all users into a single group with <code>_id: null</code>.</li> <li>$avg: Calculates the average value of the <code>age</code> field and stores it as <code>averageAge</code>.</li> </ul> </li> <li>Note: Setting <code>_id: null</code> groups all documents together.</li> </ul> <p>Q3. List the top 5 most common favorite fruits among the users?</p> <pre><code>[\n    {\n        $group : {\n            _id : \"$favoriteFruit\",\n            count : {\n                $sum : 1\n            }\n        }      \n    },\n    {\n        $sort : {\n            count : -1 // descending order for ascending write 1\n        }\n    },\n    {\n        $limit : 5\n    }\n]\n</code></pre> <ul> <li>Explanation:<ul> <li>$group: Groups users by <code>favoriteFruit</code> and counts occurrences with <code>$sum: 1</code>.</li> <li>$sort: Sorts the fruits by <code>count</code> in descending order.</li> <li>$limit: Limits the output to the top 5 fruits.</li> </ul> </li> <li>Note: Sorting and limiting are key to finding the top results.</li> </ul> <p>Q4. Find the total number of males and the females.</p> <pre><code>[\n    {\n        $group : {\n            _id : \"$gender\",\n            genderCount : {\n                $sum : 1\n            }\n        }      \n    },\n]\n</code></pre> <ul> <li>Explanation:<ul> <li>$group: Groups users by <code>gender</code>.</li> <li>$sum: Counts the number of documents for each gender (e.g., male and female) and stores the count as <code>genderCount</code>.</li> </ul> </li> <li>Note: The result will show the total count for each gender.</li> </ul> <p>Q5. Which country has the highest number of the registered users?</p> <pre><code>[\n    {\n        $group : {\n            _id : \"$company.location.country\",\n            count : {\n                $sum : 1\n            }\n        }      \n    },\n    {\n        $sort : {\n            count : -1\n        }\n    },\n    {\n        $limit : 1\n    }\n]\n</code></pre> <ul> <li>Explanation:<ul> <li>$group: Groups users by <code>company.location.country</code> and counts the number of users per country.</li> <li>$sort: Sorts the countries by user count in descending order.</li> <li>$limit: Limits the result to the top country with the highest user count.</li> </ul> </li> <li>Note: This gives the country with the most registered users.</li> </ul> <p>Q6. List all the unique eye colors present in the collection.</p> <pre><code>[\n    {\n        $group : {\n            _id : \"$eyeColor\",\n        }   \n    },\n]\n</code></pre> <ul> <li>Explanation:<ul> <li>$group: Groups documents by <code>eyeColor</code>, ensuring each color is listed only once as <code>_id</code>.</li> </ul> </li> <li>Note: This returns all unique eye colors present in the collection.</li> </ul> <p>Q7. What is the average number of tags per user?</p> <p>Solution 1: Using <code>$unwind</code> <pre><code>[\n    {\n        $unwind : \"$tags\"\n    },\n    {\n        $group : {\n            _id : \"$_id\",\n            numberOfTags : {\n                $sum : 1\n            }\n        }\n    },\n    {\n        $group : {\n            _id : null,\n            averageNumberOfTags : {\n                $avg : \"$numberOfTags\"\n            }\n        }\n    }\n]\n</code></pre></p> <p>Explanation: - (unwind**: Deconstructs the <code>tags</code> array into multiple documents. - **\\)group: Groups by user <code>_id</code> to count <code>numberOfTags</code>. - $group (again): Calculates the average <code>numberOfTags</code> across all users.</p> <p>Solution 2: Using <code>$addFields</code> <pre><code>[\n    {\n        $addFields : {\n            numberofTags : {\n                $size : {\n                    $ifNull : [\"$tags\", []]\n                }\n            }\n        }\n    },\n    {\n        $groups : {\n            _id : \"$numberofTags\"\n            averageNumberOfTags : {\n                $avg : \"$numberofTags\"\n            }\n        }\n    }\n]\n</code></pre></p> <ul> <li>Explanation:<ul> <li>$addFields: Adds <code>numberOfTags</code> by calculating the size of the <code>tags</code> array. Handles null/empty arrays with <code>$ifNull</code>.</li> <li>$group: Calculates the average <code>numberOfTags</code> across all users.</li> </ul> </li> <li>Note: Both approaches achieve the same goal but use different methods to calculate the average number of tags per user.</li> </ul> <p>Q8. How many users have the tag \u2018enim\u2019 in the tags array?</p> <pre><code>[\n    {\n        $match : {\n            tags : 'enim'\n        }\n    },\n    {\n        $count : \"userWithEnimTag\"\n    }\n]\n</code></pre> <ul> <li>Explanation:<ul> <li>$match: Filters users who have the tag <code>'enim'</code> in their <code>tags</code> array.</li> <li>$count: Counts the number of users with the <code>'enim'</code> tag and outputs it as <code>userWithEnimTag</code>.</li> </ul> </li> <li>Note: This finds all users whose <code>tags</code> array contains the specific tag <code>'enim'</code>.</li> </ul> <p>Q9. What are the name and age of the users who are inactive and have \u2018velit\u2019 as a tag?</p> <pre><code>[\n    {\n        $match : {\n            isActive : false,\n            tags : \"velit\"\n        }\n    },\n    {\n        $project : {\n            name : 1,\n            age : 1\n        }\n    }\n]\n</code></pre> <ul> <li> <p>Explanation:</p> <ul> <li>$match: Filters users who are inactive (<code>isActive: false</code>) and have <code>'velit'</code> in their <code>tags</code> array.</li> <li>$project: Includes only the <code>name</code> and <code>age</code> fields in the output.</li> <li>Note: The <code>$project</code> stage ensures that only the required fields are returned.</li> </ul> </li> </ul> <p>Q10. How many users have phone number starting with \u2018+1 (940)\u2019 ?</p> <pre><code>[\n    {\n        $match : {\n            \"company.phone\" : \"/^\\\\+1 \\\\(940\\\\)/\",\n\n        }\n    },\n    {\n        $count : \"usersWithSpecialPhoneNumber\"\n    }\n]\n</code></pre> <ul> <li>Explanation:<ul> <li>$match: Filters users whose <code>company.phone</code> starts with <code>+1 (940)</code> using a regular expression (<code>$regex</code>).</li> <li>$count: Counts the number of users with matching phone numbers and outputs as <code>usersWithSpecialPhoneNumber</code>.</li> </ul> </li> <li>Note: The <code>$regex</code> operator is used for pattern matching in MongoDB queries.</li> </ul> <p>Q11. Who has registered the most recently?</p> <pre><code>[\n    {\n        $sort : {\n            registered : -1\n        }\n    },\n    {\n        $limit : 1\n    },\n    {\n        $project : {\n            name : 1,\n            registered : 1\n        }\n    }\n]\n</code></pre> <ul> <li>Explanation:<ul> <li>$sort: Sorts users by the <code>registered</code> field in descending order (most recent first).</li> <li>$limit: Limits the result to the top 1 user.</li> <li>$project: Includes only the <code>name</code> and <code>registered</code> fields in the output.</li> </ul> </li> <li>Note: This pipeline identifies the user who registered most recently by sorting and limiting the results.</li> </ul> <p>Q12. Categories user by there favorite fruit?</p> <pre><code>[\n    {\n        $group : {\n            _id : \"$favoriteFruit\",\n            users : {\n                $push : \"$name\"\n            }\n        }\n    },\n]\n</code></pre> <ul> <li>Explanation:<ul> <li>$group: Groups users by <code>favoriteFruit</code>.</li> <li>$push: Collects names of users with the same <code>favoriteFruit</code> into an array called <code>users</code>.</li> </ul> </li> <li>Note: This pipeline categorizes users based on their favorite fruit, with each fruit as a group containing an array of user names.</li> </ul> <p>Q13. How many users have \u2018ad\u2019 as the second tag in their list of tags?</p> <pre><code>[\n    {\n        $match : {\n            \"tags.1\" : \"ads\"\n        }\n    },\n    {\n        $count : 'secondTagAd'\n    }\n]\n</code></pre> <ul> <li>Explanation:<ul> <li>$match: Filters users where the second tag in the <code>tags</code> array (<code>tags[1]</code>) is <code>\"ad\"</code>.</li> <li>$count: Counts the number of users matching the condition and outputs the count as <code>secondTagAd</code>.</li> </ul> </li> <li>Note: Array indexing starts from 0, so <code>tags.1</code> refers to the second element in the <code>tags</code> array.</li> </ul> <p>Q14. Find users who have both \u2018enim\u2019 and \u2018ad\u2019 as tags.</p> <pre><code>[\n    {\n        $match : {\n            tags : {\n                $all : [\"enim\", \"ad\"]\n            }\n        }\n    },\n]\n</code></pre> <ul> <li>Explanation:<ul> <li>$match: Filters users who have both <code>'enim'</code> and <code>'ad'</code> in their <code>tags</code> array.</li> <li>$all: Ensures that all specified tags are present in the array.</li> </ul> </li> <li>Note: This query retrieves users who have both tags in their <code>tags</code> array.</li> </ul> <p>Q15. List all companies located in the USA with their corresponding user count.</p> <pre><code>[\n    {\n        $match : {\n            \"company.location.country\" : \"USA\"\n        }\n    },\n    {\n        $group : {\n            _id: \"$company.title\",\n            userCount : {\n                $sum : 1\n            }\n        }\n    }\n]\n</code></pre> <ul> <li>Explanation:<ul> <li>$match: Filters users whose company is located in the USA.</li> <li>$group: Groups users by their company title (<code>$company.title</code>) and counts the number of users per company with <code>$sum: 1</code>.</li> </ul> </li> <li>Note: This pipeline provides a list of companies in the USA along with the count of users for each company.</li> </ul> <p>Q16. Find the author details of the books.</p> <pre><code>[\n    {\n        $lookup : {\n            from : \"authors\",\n            localField : \"author_id\",\n            foreignField : \"_id\",\n            as : \"author_details\"\n        }\n    },\n    {\n        $addFields : {\n            author_details : {\n                $first : \"$author_details\"\n            }\n        }\n    }\n]\n</code></pre> <p>or</p> <pre><code>[\n    {\n        $lookup : {\n            from : \"authors\",\n            localField : \"author_id\",\n            foreignField : \"_id\",\n            as : \"author_details\"\n        }\n    },\n    {\n        $addFields : {\n            author_details : {\n                $arrayElemAt : [\"$author_details\", 0]\n            }\n        }\n    }\n]\n</code></pre> <ul> <li>Explanation:<ul> <li>$lookup: Joins the <code>authors</code> collection with the <code>books</code> collection on <code>author_id</code> and <code>_id</code>, storing the result in <code>author_details</code>.</li> <li>$addFields: Adjusts the <code>author_details</code> field to only include the first element of the array (since <code>$lookup</code> returns an array).</li> </ul> </li> <li>Note: Both solutions achieve the same result, converting the array of <code>author_details</code> into a single document by extracting the first element.</li> </ul>"},{"location":"learning/react/Context%20API%20-%20Hitesh%20Chaudhary%20%28Youtube%29/","title":"Context API   Hitesh Chaudhary (Youtube)","text":"<p>Reference Link : Youtube Link</p> <p>This guide will walk you through setting up and using React Context for managing global state across your application.</p>"},{"location":"learning/react/Context%20API%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#1-create-a-context","title":"1. Create a Context","text":"<p>Start by creating a context. This will allow you to manage and share data across components without having to pass props down manually through each component.</p> <p>File: <code>UserContext.js</code></p> <pre><code>import React from 'react';\nconst UserContext = React.createContext();\nexport default UserContext;\n</code></pre>"},{"location":"learning/react/Context%20API%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#2-create-a-context-provider","title":"2. Create a Context Provider","text":"<p>Next, create a provider component that will wrap around your application or specific components that need access to the shared context. This provider will store the data and provide it to any component that consumes the context.</p> <p>File: <code>UserContextProvider.jsx</code></p> <pre><code>import React, { useState } from 'react';\nimport UserContext from './UserContext';\n\nconst UserContextProvider = ({ children }) =&gt; {\n    const [user, setUser] = useState(null);\n\n    return (\n        &lt;UserContext.Provider value={{ user, setUser }}&gt;\n            {children}\n        &lt;/UserContext.Provider&gt;\n    );\n};\n\nexport default UserContextProvider;\n</code></pre>"},{"location":"learning/react/Context%20API%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#3-wrap-your-application-with-the-context-provider","title":"3. Wrap Your Application with the Context Provider","text":"<p>To make the context available throughout your application, wrap your main component (e.g., <code>App.js</code>) with the <code>UserContextProvider</code>.</p> <p>File: <code>App.js</code></p> <pre><code>import React from 'react';\nimport UserContextProvider from './context/UserContextProvider';\n\nconst App = () =&gt; {\n    return (\n        &lt;UserContextProvider&gt;\n            {/* Your components here */}\n        &lt;/UserContextProvider&gt;\n    );\n};\n\nexport default App;\n</code></pre>"},{"location":"learning/react/Context%20API%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#4-using-the-context-in-components","title":"4. Using the Context in Components","text":"<p>To use the context data in a component, you can use the <code>useContext</code> hook. This allows you to access and update the shared state.</p> <p>Example: <code>Login.js</code></p> <pre><code>import React, { useContext } from 'react';\nimport UserContext from '../context/UserContext';\n\nfunction Login() {\n    const { setUser } = useContext(UserContext);\n\n    // Example usage\n    const handleLogin = () =&gt; {\n        setUser({ name: 'John Doe' }); // Set user data on login\n    };\n\n    return (\n        &lt;button onClick={handleLogin}&gt;\n            Login\n        &lt;/button&gt;\n    );\n}\n\nexport default Login;\n</code></pre>"},{"location":"learning/react/Context%20API%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#summary","title":"Summary","text":"<ul> <li>Create Context: Define your context using <code>React.createContext()</code>.</li> <li>Context Provider: Create a provider component that manages the state and provides it to the child components.</li> <li>Wrap Application: Use the context provider to wrap the components that need access to the context data.</li> <li>Consume Context: Use <code>useContext</code> to access and manipulate context data in your components.</li> </ul> <p>This pattern can be extended to manage any global state in your React application effectively.</p>"},{"location":"learning/react/Handle%20Change%20in%20React%20Forms/","title":"Handle Change in React Forms","text":"<p>This guide covers how to handle form data changes in React, specifically treating checkboxes differently while managing other input types with a simple state update.</p>"},{"location":"learning/react/Handle%20Change%20in%20React%20Forms/#1-initialize-form-state","title":"1. Initialize Form State","text":"<p>Create a <code>useState</code> hook to manage form data, initializing with default values:</p> <pre><code>const [formData, setFormData] = useState({\n    year: \"\",\n    batches: [],\n    questions: [],\n});\n</code></pre>"},{"location":"learning/react/Handle%20Change%20in%20React%20Forms/#2-handle-input-changes","title":"2. Handle Input Changes","text":"<p>Create a <code>handleChange</code> function that updates the state based on user input:</p> <ul> <li>Checkbox: If the checkbox is checked, add its name to the <code>batches</code> array. If unchecked, remove it.</li> <li>Other Input Types: For text inputs and others, update the state with the new value for the given field. <pre><code>const handleChange = (e) =&gt; {\n    const { name, value, type, checked } = e.target;\n    if (type === \"checkbox\") {\n        setFormData((prevData) =&gt; ({\n            ...prevData,\n            batches: checked\n                ? [...prevData.batches, name]\n                : prevData.batches.filter((batchName) =&gt; batchName !== name),\n        }));\n    } else {\n        setFormData((prevData) =&gt; ({\n            ...prevData,\n            [name]: value,\n        }));\n    }\n};\n</code></pre> This simple approach handles form state updates efficiently, with special handling for check-boxes.</li> </ul>"},{"location":"learning/react/Handle%20Change%20in%20React%20Forms/#3-complete-example-given-by-chatgpt-and-not-confirmed-yet","title":"3. Complete example (Given by chatGPT and not confirmed yet)","text":"<pre><code>import React, { useState } from 'react';\n\nconst FormComponent = () =&gt; {\n    const [formData, setFormData] = useState({\n        name: \"\",\n        age: \"\",\n        acceptTerms: false,\n        gender: \"\",\n        favoriteColor: \"\",\n    });\n\n    const handleChange = (e) =&gt; {\n        const { name, value, type, checked } = e.target;\n\n        // Handle checkboxes\n        if (type === \"checkbox\") {\n            setFormData((prevData) =&gt; ({\n                ...prevData,\n                [name]: checked,\n            }));\n        }\n        // Handle radio buttons\n        else if (type === \"radio\") {\n            setFormData((prevData) =&gt; ({\n                ...prevData,\n                [name]: value,\n            }));\n        }\n        // Handle other input types (text, number, select, etc.)\n        else {\n            setFormData((prevData) =&gt; ({\n                ...prevData,\n                [name]: value,\n            }));\n        }\n    };\n\n    const handleSubmit = (e) =&gt; {\n        e.preventDefault();\n        console.log(formData);  // Handle form submission (e.g., send data to an API)\n    };\n\n    return (\n        &lt;form onSubmit={handleSubmit}&gt;\n            {/* Text Input */}\n            &lt;label&gt;\n                Name:\n                &lt;input\n                    type=\"text\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleChange}\n                /&gt;\n            &lt;/label&gt;\n\n            {/* Number Input */}\n            &lt;label&gt;\n                Age:\n                &lt;input\n                    type=\"number\"\n                    name=\"age\"\n                    value={formData.age}\n                    onChange={handleChange}\n                /&gt;\n            &lt;/label&gt;\n\n            {/* Checkbox */}\n            &lt;label&gt;\n                Accept Terms:\n                &lt;input\n                    type=\"checkbox\"\n                    name=\"acceptTerms\"\n                    checked={formData.acceptTerms}\n                    onChange={handleChange}\n                /&gt;\n            &lt;/label&gt;\n\n            {/* Radio Buttons */}\n            &lt;fieldset&gt;\n                &lt;legend&gt;Gender:&lt;/legend&gt;\n                &lt;label&gt;\n                    Male\n                    &lt;input\n                        type=\"radio\"\n                        name=\"gender\"\n                        value=\"male\"\n                        checked={formData.gender === \"male\"}\n                        onChange={handleChange}\n                    /&gt;\n                &lt;/label&gt;\n                &lt;label&gt;\n                    Female\n                    &lt;input\n                        type=\"radio\"\n                        name=\"gender\"\n                        value=\"female\"\n                        checked={formData.gender === \"female\"}\n                        onChange={handleChange}\n                    /&gt;\n                &lt;/label&gt;\n            &lt;/fieldset&gt;\n\n            {/* Select Dropdown */}\n            &lt;label&gt;\n                Favorite Color:\n                &lt;select\n                    name=\"favoriteColor\"\n                    value={formData.favoriteColor}\n                    onChange={handleChange}\n                &gt;\n                    &lt;option value=\"\"&gt;-- Select Color --&lt;/option&gt;\n                    &lt;option value=\"red\"&gt;Red&lt;/option&gt;\n                    &lt;option value=\"blue\"&gt;Blue&lt;/option&gt;\n                    &lt;option value=\"green\"&gt;Green&lt;/option&gt;\n                &lt;/select&gt;\n            &lt;/label&gt;\n\n            &lt;button type=\"submit\"&gt;Submit&lt;/button&gt;\n        &lt;/form&gt;\n    );\n};\n\nexport default FormComponent;\n</code></pre>"},{"location":"learning/typescript/Typescript%20-%20Hitesh%20Chaudhary%20%28Youtube%29/","title":"Typescript   Hitesh Chaudhary (Youtube)","text":"<p>Reference Link : Youtube Link</p>"},{"location":"learning/typescript/Typescript%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#provides-type-safety","title":"Provides Type Safety","text":"<p>Example: <pre><code>2 + \"2\" // Outputs: '22' in JavaScript\n</code></pre></p> <p>Typescript helps prevent such issues with type safety.</p>"},{"location":"learning/typescript/Typescript%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#what-does-typescript-do","title":"What does TypeScript do?","text":"<ul> <li>Static Checking: Catches errors at compile-time instead of runtime.</li> <li>TypeScript is a development tool; the project still runs in JavaScript.</li> </ul>"},{"location":"learning/typescript/Typescript%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#installation","title":"Installation","text":"<p>Refer to the official TypeScript documentation for installation instructions. docs</p>"},{"location":"learning/typescript/Typescript%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#running-a-typescript-file","title":"Running a TypeScript File","text":"<pre><code>tsc index.ts\n</code></pre> <p>This command compiles the TypeScript file into a JavaScript file (<code>index.js</code>).</p>"},{"location":"learning/typescript/Typescript%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#basic-syntax","title":"Basic Syntax","text":"<pre><code>let variableName: type = value;\n</code></pre>"},{"location":"learning/typescript/Typescript%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#type-inference","title":"Type Inference","text":"<p>In many cases, TypeScript can infer the type. For example:</p> <pre><code>let userId = 3; // TypeScript infers 'userId' as a number.\n</code></pre>"},{"location":"learning/typescript/Typescript%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#functions","title":"Functions","text":""},{"location":"learning/typescript/Typescript%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#basic-function","title":"Basic Function","text":"<pre><code>function addTwo(num: number): number {     return num + 2; }\n</code></pre> <p>Or using an arrow function:</p> <pre><code>const addTwo = (num: number): number =&gt; num + 2;\n</code></pre>"},{"location":"learning/typescript/Typescript%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#objects-in-functions","title":"Objects in Functions","text":"<pre><code>function createUser({name: string, isPaid: boolean}): {name: string, price: boolean} {     \n    return {name: \"harsh\", price: false}; \n}\n</code></pre>"},{"location":"learning/typescript/Typescript%20-%20Hitesh%20Chaudhary%20%28Youtube%29/#working-with-types","title":"Working with Types","text":"<p>You can define types for complex data structures. <pre><code>type User = {     \n        name: string;     \n        email: string;     \n        isActive: boolean; \n        };  \nfunction createUser(user: User) {     \n    // Function logic here \n    }\n</code></pre></p>"},{"location":"projects/Project%20Ideas/","title":"Project Ideas","text":"<p>Can't Think of any :(</p>"}]}